p +geom_bar(stat ="identity", position="dodge")
remove(*)
remove.all
remove(all)
remove(dsmall)
remove(p)
remove(s)
remove(mdata)
remove(tdata)
data
library(reshape)
mdata <- melt(data, id ="File")
head(mdata)
str(mdata)
library(ggplot2)
p <- ggplot(mdata, aes(x=File,y=value,fill=variable)) +geom_bar(stat="identity")
p
p + geom_bar(stat ="identity", position="dodge")
remove(p)
mdata <- transform(mdata,Reads_in_Mil=value/1000000)
head(mdata)
p <- ggplot(mdata, aes(x=File, y=Reads_in_Mil))
p + geom_bar(stat="identity", position="dodge")
p + aes(fill=variable)
remove(p)
p <-ggplot(mdata, aes(x=File, y=Reads_in_Mil, fill=variable)) +geom_bar(stat="identity", position="dodge")
p
str(p)
p$mapping
p <-ggplot(mdata, aes(x=File, y=Reads_in_Mil, fill=variable)) +geom_bar(stat="identity", position="fill")
p
p <-ggplot(mdata, aes(x=File, y=Reads_in_Mil, fill=variable)) +geom_bar(stat="identity", position="identity")
p
data <- read.table("/Users/shamoni/Desktop/SeqPrep_stdout", header=TRUE,sep="\t")
mdata <- melt(data, id="File")
library(reshape)
mdata <- melt(data, id="File")
mdata <- transform(mdata, Reads in Millions = value/1000000)
mdata <- transform(mdata, "Reads in Millions" = value/1000000)
head(mdata)
mdata <- transform(mdata, Reads_in_Millions = value/1000000)
head(mdata)
p <- ggplot(mdata, aes(x=File, y=Reads_in_Millions, fill=variable))
library(ggplot)
library(ggplot2)
p <- ggplot(mdata, aes(x=File, y=Reads_in_Millions, fill=variable))
p + geom_bar(stat ="identity", position ="identity")
head(mssleep)
head(msleep)
ggplot(msleep, aes(sleep_rem/sleep_total, awake)) +geom_point()
ggplot(msleep, aes(sleep_rem/sleep_total, awake)) +geom_point() +geom_smooth()
p <- ggplot(msleep, aes(sleep_rem/sleep_total, awake))
summary(p)
p <- p + geom_point()
summary(p)
data <- read.table("/Users/shamoni/Desktop/ChIP\ Analysis/Duplicate_Clusters/clstr_size.txt", header = TRUE)
head(data)
str(data)
library(ggplot)
library(ggplot2)
p <- ggplot(data, aes(x=size,y=No.seq))
p +geom_hist()
p +geom_histogram()
p +geom_histogram(stat ="bin")
p +geom_histogram(stat ="identity")
p <- ggplot(data, aes(x=size,y=log(No.seq)))
p +geom_histogram(stat="identity")
p +geom_histogram(stat="identity", binwidth="100")
p +geom_histogram(stat="identity", binwidth="1000")
p +geom_histogram(stat="identity", binwidth="10000")
p +geom_histogram(stat="identity", binwidth="100000")
p +geom_density(stat="identity")
p +geom_density(stat="identity", color)
p +geom_density(stat="identity", color="size")
p +geom_density(stat="identity", color=size)
p +geom_density(stat="identity", color="red")
p +geom_density(stat="identity", fill="red")
p +geom_histogram(stat="identity", fill="red")
p +geom_histogram(stat="identity", fill="red", binwidth=1000000)
p +geom_histogram(stat="identity", fill="red", position="dodge")
p +geom_histogram(stat="identity", fill="red", position="identity")
library("rmarkdown")
install.packages("rmarkdown", dependencies = TRUE)
library("rmarkdown")
a <- c(1:5)
b <-c(10:15)
c <-c(2:7)
d <- c(30:35)
df <- rbind(a,b,c,d)
class(df)
as.dataframe(df)
df <- as.data.frame(df)
class(df)
df
library(dplyr)
df
str(df)
rm(s)
rm(a)
rm(b)
rm(c)
rm(d)
strain <- c(rep("a",5), rep("b",5), rep("c",5))
strain
colony_size <- c(1:5, 20:25, 2:7)
colony_sizie
colony_size
df <- cbind(strain, colony_size)
colony_size <- colony_size[c(1:10, 12:16)]
length(colony_size)
df <- cbind(strain, colony_size)
df
class(df)
as.data.frame(df)
df <- as.data.frame(df)
class(df)
library(ggplot2)
head(df)
ggplot(df, aes(x=strain, y=colony_size)) +geom_point()
str(df)
df$colony_size <- as.numeric(df$colony_size)
str(df)
ggplot(df, aes(x=strain, y=colony_size)) +geom_point()
df
colony_size
rm(df)
df <- data.frame(strain, colony_size)
str(df)
ggplot(df, aes(x=strain, y=colony_size)) +geom_point()
ggplot(df, aes(x=strain, y=colony_size)) +geom_point() + geom_boxplot()
ggplot(df, aes(x=strain, y=colony_size)) + geom_boxplot() +geom_point()
ggplot(df, aes(x=strain, y=colony_size)) + geom_boxplot() +geom_point(aes(color="red"))
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar()
ggplot(df, aes(x=strain, y=colony_size)) + geom_dotplot()
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar()
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="identity")
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="identity") + geom_point(aes(color="red"))
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="identity")
df
p <- ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="identity")
str(p)
p <- ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(by=strain, stat="identity")
p
ggplot(df, aes(x=strain, y=colony_size)) + geom_boxplot()
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="mea")
ggplot(df, aes(x=strain, y=colony_size)) + geom_bar(stat="mean")
?geom_bar
mm <- ddply(mtcars, "cyl", summarise, mmpg = mean(mpg))
ggplot(mm, aes(x = factor(cyl), y = mmpg)) + geom_bar(stat = "identity")
library(dplyr)
head(mtcars)
df_m <- ddply(df, "strain", summarise, mean = mean(colony_size))
library(plyr)
df_m <- ddply(df, "strain", summarise, mean = mean(colony_size))
df_m
ggplot(df_m, aes(x=strain, y=mean)) +geom_bar(stat="identity")
ggplot(df_m, aes(x=strain, y=mean)) +geom_bar(stat="identity") + geom_point(data=df)
?geom_point()
ggplot(df_m, aes(x=strain, y=mean)) +geom_bar(stat="identity") + geom_point(data=df, aes(x=strain, y=colony_size, color="red"))
ggplot(df_m, aes(x=strain, y=mean)) +geom_bar(stat="identity") + geom_point(data=df, aes(x=strain, y=colony_size, color="red", size = 2))
library("Shortread")
bioclite()
source("http://bioconductor.org/biocLite.R")
biocLite()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_14.dist")
str(df)
plot(df$abundance, df$count)
library(ggplot2)
p <- ggplot(df, aes(x=abundance, y=count))
p + scale_y_log10
p + axis_y_log10
p + axis_y_log10()
p +scale_y_log10()
p
p + scale_y_log10()
rm p
rm(p)
p <- ggplot(data=df, aes(x=abundance, y=count))
p + scale_y_log10()
summary(df)
p <- ggplot(data=df, aes(x=abundance, y=count))
p
p + geom_point()
p + coord_cartesian(xlim=c(0,100))
source('~/.active-rstudio-document')
p
source('~/.active-rstudio-document')
p
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
rm(p)
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100)) + scale_y_log10()
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,1000)) + scale_y_log10()
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10(
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_03.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_19.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_13.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_03.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_10.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,4000)) + scale_y_log10()
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_03.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_13.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_14.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_17.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,100))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p + coord_cartesian(xlim=c(0,400))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_point()
p
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,400), ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,1000), ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(2000,inf),ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(2000,7000),ylim=c(0,1000))
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_13.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_14.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_19.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_10.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.csv("/Users/shamoni/Desktop/kmer\ dist/SML_16.dist")
p <- ggplot(df, aes(x=abundance, y=count)) + geom_line()
p + coord_cartesian(xlim=c(0,2000),ylim=c(0,1000))
df <- read.table("/Users/shamoni/Desktop/17idx_sorted.out")
str(df)
library(ggplot2)
p <- ggplot(df, aes(V3))
p + geom_histogram
p + stat_bin()
summary(df)
p +geom_area()
p + box_plot()
p + geom_line()
p +geom_point()
rm(p)
library(dplyr)
head(df)
df_subset <- select(df, V3)
p <- ggplot(df_subset)
p +geom_dotplot()
head(df_subset)
p <- ggplot(df_subset, aes(V3))
p + geom_dotplot()
p + geom_dotplot(binwidth = 1)
p + geom_dotplot(binwidth = 10)
p + geom_boxplot()
df_subset$ID <- rep("17_clusters", length(df_subset))
head(df_subset)
clear
rm(p)
p <- ggplot(df_subset, aes(x=ID, y=V3))
p +geom_boxplot()
p +geom_dotplot()
p +geom_boxplot()
display.brewer.pal(n=5, name = "Dark2")
library(colorbrewer)
library(RColorBrewer)
display.brewer.all()
display.brewer.pal(n = 5, name = "Dark2")
display.brewer.all()
display.brewer.pal(n = 5, name = "set2")
display.brewer.pal(n = 5, name = "Set2")
display.brewer.pal(n = 5, name = "Set1")
display.brewer.pal(n = 5, name = "Set1", labels = jbrewcolours)
display.brewer.pal(n = 5, name = "Set1", labels = jBrewColours)
display.brewer.pal(n = 5, name = "Set1", labels = jBrewColours)
?display.brewer.pal
brewer.pal.info(n=5, name = "Set1")
brewer.pal.info["Set1"]
brewer.pal.info["Set1",]
jBrewColors <- brewer.pal(n = 5, name = "Set1")
jBrewColors
library("ape")
install.packages("phyclust")
demo("toy", package = "phyclust")
windows()
clear
ls
plotdots(X, X.class)
?plotdots
plotdots()
windows()
?windows
??windows
saveplot()
savePlot()
plot(plotdots(X, X.class))
ls
?plotdots
X <- seq.data.toy$org
X
clear
par(mfrow = c(2,2))
plotdots(X)
plotdots(X, diff.only = FALSE)
plotdots(X, diff.only = TRUE)
plotdots(X, fill = TRUE, diff.only = FALSE, label = FALSE)
plotdots(X, X.class)
X.SNP <- nid2sid(X)
plotdots(X.SNP, X.class)
plothist(X, X.class)
ret <- phyclust.edist(X, )
code.type
.code.type
write.*()
write.fasta()
libpaths()
.libPaths
.libPaths()
.libPaths()[1]
?ms
?seqgen
.show.option()
?gsub
seq.data.toy
toy
str(toy)
head(X)
str(X)
str(seq.data.toy)
seq.data.toy$seqname
clear
str(X.class)
head(X.class)
head(X)
head(seq.data.toy$seqname)
head(X.class)
source('~/Desktop/lastz/Contig_Analysis.R')
library(dplyr)
library(ggplot2)
data <- read.csv("q_CEN2_allPacbio_forR.csv", sep="\t", header=TRUE)
data$name1 <- as.factor(data$name1)
library("ape")
?find.consensus
??find.consensus
??missing.code
.missing.code
library("phyclust")
.missing.code
.missing.code$mid
.missing.code$code
type(.missing.code)
str(.missing.code)
library("phyclust")
.genetic.code
str(.genetic.code)
str(.snp)
?plot.gaps
??plotgaps
.code.type[1]
.code.type[2]
code.type = "SNP"
code.type %in% .code.type
sum(TRUE)
sum(FALSE)
.nucleotide
install.packages("adegenet")
install.packages("pegas")
4.5^(1/3)
1.65*12
3^(1/3)
1.44*12
?.C
library(pegas)
?haplotype.DNAbin
library(grid)
?viewport()
pushViewport(viewport())
grid.lines(c(0.05,0.95),c(0.95,0.05))
grid.lines(c(0.05,0.95),c(0.95,0.05))
grid.lines(c(0.95,0.05),c(0.05,0.95))
grid.lines(c(0.95,0.05),c(0.05,0.95))
dev.off()
pushViewport(viewport())
grid.lines(c(1,0),c(0,0))
grid.lines(c(0,0),c(1,1))
grid.lines(c(0.05,0.95),c(0.95,0.05))
grid.lines(c(0.95,0.05),c(0.05,0.05))
dev.off()
pushViewport(viewport())
grid.lines(c(0.05,0.95),c(0.95,0.05))
grid.lines(c(0.05,0.05),c(0.95,0.95))
dev.off()
pushViewport(viewport())
grid.lines(c(0.05,0.05),c(0.95,0.95))
grid.lines(c(0.0,0.1),c(0.0,0.95))
grid.lines(c(0.05,0.05),c(0.95,0.95))
grid.lines(c(0.05,0.95),c(0.95,0.95))
grid.lines(c(0.05,0.95),c(0.95,0.05))
grid.lines(c(0.05,0.05),c(0.95,0.95))
pushViewport(viewport())
grid.lines(c(0.05,0.05),c(0.95,0.95))
grid.rect()
grid.rect()
library(grid)
pushViewport(viewport())
grid.lines(c(0.05,0.05),c(0.95,0.95))
grid.lines(c(.1,.1),c(0.8,0.8))
par(mar=c(0,0,0,0))
pushViewport(viewport())
grid.lines(c(.1,.1),c(0.8,0.8))
?grid.lines
dev.off()
pushViewport(viewport())
grid.lines(c(0.95,0.05),c(0.05,0.95))
grid.lines(c(0.05,0.95),c(0.05,0.95))
y <- matrix(rnorm(100), 20, 5, dimnames=list(paste("g", 1:20, sep=""), paste("t", 1:5, sep="")))
y
hr <- hclust(as.dist(1-cor(t(y), method="pearson")), method="complete")
hr
y <- y[hr$order,]
y
?levelplot
??levelplot
library(ggplot2)
library(reshape2)
nRow <- 9
nCol <- 16
rnorm(9*16)
myData <- matrix(rnorm(nRow * nCol), ncol = nCol)
mean(myData)
summary(myData)
str(myData)
rownames(myData) <- letters[1:nRow]
letters[1:9]
colnames(myData) <- LETTERS[1:nCol]
for(ii in 2:ncol(myData)){  myData[, ii] <- myData[, ii-1] + rnorm(nrow(myData))  }
for(ii in 2:nrow(myData)){  myData[ii, ] <- myData[ii-1, ] + rnorm(ncol(myData))  }
head(myData)
melt(myData)
longData <- melt(myData)
head(longData, 20)
colorRampPalette
?colorRampPalette
library(phyclust)
?paml.baseml
clear
EMC <- .EMControl(init.procedure = "emEM")
EMC
set.seed(1234)
K <- 4
seq.data.toy
ret.K <- phyclust(seq.data.toy$org,K,EMC=EMC)
str(seq.data.toy)
str(ret.K)
ret.K$Mu
paml.baseml.control()
?gen.star.tree
she drives me crazy
list.dir()
ls
library(phyclust)
?bootstrap.seq.data
bootstrap.seq.data()
?predict
rep(6,10)
setwd("~/Desktop/Signature_Kmers")
library(ape)
library(phyclust)
seqdata <- read.fasta("q_CEN2_All_K6.aln2")
mat <- tolower(seqdata$org.code)
rownames(mat) <- seqdata$seqname
DNAbin <- as.DNAbin(mat)
TAIR10seqs <- DNAbin[grepl("Chr",labels(DNAbin)),]
TAIR10tree <- nj(dist.dna(TAIR10seqs,pairwise.deletion=TRUE,model="F84"))
save(TAIR10tree,file="TAIR10tree.RData")
custom <-c(gray(0),cm.colors(10)[9],rev(topo.colors(5)[-1]))
custom
